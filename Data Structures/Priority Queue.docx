
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAXDATA 1000000
#define MINSIZE 1

typedef struct employee {
	char name [25];
	int id;
	float salary;
} emp;

typedef struct heapstruct {
	int capacity, size;
	emp * elements;
} pqueue;

int isFull (pqueue *h)
{
	if(h->capacity == h->size)
		return 1;
	else
		return 0;
}

int isEmpty (pqueue *h)
{
	if (h->size==0)
		return 1;
	else
		return 0;
}

pqueue * create (int max)
{	
	pqueue * h;
	if (max < MINSIZE)
	{
		printf("Priority Queue is too small\n");
		return NULL;
	}

	h= (pqueue *)malloc(sizeof(pqueue));
	

	if(h==NULL)
		printf("Out of space\n");	

	h->capacity = max;
	h->size =0;

	h->elements = (emp *)malloc(sizeof(emp)*h->capacity);
	strcpy(h->elements[0].name,"");
	//printf("Here\n");
	h->elements[0].id=0;
	h->elements[0].salary=MAXDATA;
	//printf("test\n");
	return h;

}

void insert (char name[], int id, float salary, pqueue * h)
{	int i;
	if (isFull(h))
		{	printf("Priority Queue is full\n");
			return;	}

	for(i= ++h->size; h->elements[i/2].salary < salary; i/=2)
	h->elements[i] = h->elements [i/2];
	strcpy(h->elements[i].name,name);
	h->elements[i].id=id;
	h->elements[i].salary=salary;
	//printf("test\n");
}

emp deleteMax (pqueue *h)
{
	int i, child;
	emp maxelement, lastelement;

	if(isEmpty(h)) {
		printf("Priority Queue is empty\n");
		return h->elements[0];
	}

	maxelement = h->elements[1];
	lastelement = h->elements[h->size --];

	for (i=1; (i*2)<=h->size; i=child)
	{
		child=i*2;
		if(child!=h->size && h->elements[child+1].salary > h->elements[child].salary)
			child++;
		if (lastelement.salary < h->elements[child].salary)
			h->elements[i] = h->elements [child];
		else
			break;
	}

	h->elements[i]=lastelement;
	return maxelement;
}

void display (pqueue *h)
{	printf("   Employee Details\n");
	for(int i=1; i<=h->size; i++)
		if(h->elements[i].id != 0)
			printf("%s\t%d\t%.2f\n", h->elements[i].name, h->elements[i].id, h->elements[i].salary);
}



int main ()
{	//printf("Here\n");
	pqueue *h= create (10);
	insert("Aditya",1, 10,h);
	display(h);
	printf("-------------------------\n");
	insert("Babu",2, 1010,h);
	display(h);
	printf("-------------------------\n");
	insert("Chinese",3, 110100,h);
	display(h);
	printf("-------------------------\n");
	insert("Doggy",4, 10001,h);
	display(h);
	printf("-------------------------\n");
	insert("Elephant",5, 12100,h);
	display(h);
	printf("-------------------------\nDeleting Max Element\n");
	deleteMax(h);
	display(h);

	return 0;
}

/*   
 Employee Details
 Aditya	1	10.00
 -------------------------
 Employee Details
 Babu	2	1010.00
 Aditya	1	10.00
 -------------------------
 Employee Details
 Chinese	3	110100.00
 Aditya	1	10.00
 Babu	2	1010.00
 -------------------------
 Employee Details
 Chinese	3	110100.00
 Doggy	4	10001.00
 Babu	2	1010.00
 Aditya	1	10.00
 -------------------------
 Employee Details
 Chinese	3	110100.00
 Elephant	5	12100.00
 Babu	2	1010.00
 Aditya	1	10.00
 Doggy	4	10001.00
 -------------------------
 Deleting Max Element
 Employee Details
 Elephant	5	12100.00
 Doggy	4	10001.00
 Babu	2	1010.00
 Aditya	1	10.00
 gml10:Downloads csea10$

*/